{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","redux/contacts/contactsSelectors.js","redux/contacts/contactsReducer.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","components/Filter/Filter.js","App.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","a","actions","get","data","name","number","contact","post","id","delete","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","createReducer","_","payload","combineReducers","ContactForm","handleChange","e","inputName","currentTarget","setState","value","handleSubmit","preventDefault","props","existContacts","some","element","alert","onSubmit","resetInput","this","className","styles","form","label","type","pattern","title","input","placeholder","onChange","required","btn","Component","connect","contactSelectors","contactOperations","ContactList","fetchContacts","contactsForList","onDeleteContact","list","map","item","info","onClick","isLoadingContacts","onFilterValue","contactActions","App","middleware","getDefaultMiddleware","store","configureStore","reducer","contactReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2310b4f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2-ibm\",\"item\":\"ContactList_item__1xKC8\",\"btn\":\"ContactList_btn__3NhYL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__j1-Rd\",\"input\":\"Filter_input__3Y3pB\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst fetchContactsRequest = createAction(\"contacts/fetch_Request\");\r\nconst fetchContactsSuccess = createAction(\"contacts/fetch_Success\");\r\nconst fetchContactsError = createAction(\"contacts/fetch_Error\");\r\n\r\nconst addContactRequest = createAction(\"contacts/add_Request\");\r\nconst addContactSuccess = createAction(\"contacts/add_Success\");\r\nconst addContactError = createAction(\"contacts/add_Error\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/delete_Request\");\r\nconst deleteContactSuccess = createAction(\"contacts/delete_Success\");\r\nconst deleteContactError = createAction(\"contacts/delete_Error\");\r\n\r\nconst changeFilter = createAction(\"contacts/changeFilter\");\r\n\r\nexport default {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n};\r\n","import axios from \"axios\";\r\nimport actions from \"./contactsActions\";\r\naxios.defaults.baseURL = \"http://localhost:3001\";\r\n\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(actions.fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(`/contacts`);\r\n    dispatch(actions.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactsError(error));\r\n  }\r\n};\r\n\r\nconst addContact =\r\n  ({ name, number }) =>\r\n  async (dispatch) => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n    };\r\n\r\n    dispatch(actions.addContactRequest());\r\n\r\n    try {\r\n      const { data } = await axios.post(\"/contacts\", contact);\r\n      dispatch(actions.addContactSuccess(data));\r\n    } catch (error) {\r\n      dispatch(actions.addContactError(error));\r\n    }\r\n  };\r\n\r\nconst deleteContact = (id) => async (dispatch) => {\r\n  dispatch(actions.deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(actions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(actions.deleteContactError(error));\r\n  }\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return items.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default { getContacts, getFilter, getLoading, getVisibleContacts };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contactsActions\";\r\n\r\nconst {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} = actions;\r\n\r\nconst contacts = {\r\n  items: [],\r\n  filter: \"\",\r\n};\r\n\r\nconst items = createReducer(contacts.items, {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(contacts.filter, {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport { contactOperations, contactSelectors } from \"../../redux/contacts\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const inputName = e.currentTarget.name;\r\n    this.setState({\r\n      [inputName]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const checkContact = this.props.existContacts.some(\r\n      (element) => element.name === this.state.name\r\n    );\r\n\r\n    checkContact\r\n      ? alert(`${this.state.name} is already in contacts`)\r\n      : this.props.onSubmit(this.state);\r\n\r\n    this.resetInput();\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            className={styles.input}\r\n            placeholder=\"Jon Jonson\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={styles.label}>\r\n          Number\r\n          <input\r\n            className={styles.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            placeholder=\"111-11-11\"\r\n            value={number}\r\n            required\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  existContacts: contactSelectors.getContacts(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (data) => dispatch(contactOperations.addContact(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import { Component } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nclass ContactList extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    const { contactsForList, onDeleteContact } = this.props;\r\n    return (\r\n      <>\r\n        <ul className={styles.list}>\r\n          {contactsForList.map(({ id, name, number }) => (\r\n            <li className={styles.item} key={id}>\r\n              <p className={styles.info}>\r\n                {name}: {number}\r\n              </p>\r\n              <button\r\n                className={styles.btn}\r\n                type=\"button\"\r\n                onClick={() => onDeleteContact(id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactList.propTypes = {\r\n  contactsForList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport ContactList from \"./ContactList\";\r\n\r\nimport { contactOperations, contactSelectors } from \"../../redux/contacts\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(contactOperations.deleteContact(id)),\r\n  fetchContacts: () => dispatch(contactOperations.fetchContacts()),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contactsForList: contactSelectors.getVisibleContacts(state),\r\n  isLoadingContacts: contactSelectors.getLoading(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import styles from \"../Filter/Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { contactActions, contactSelectors } from \"../../redux/contacts\";\r\n\r\nconst Filter = ({ onFilterValue, value }) => (\r\n  <>\r\n    <label className={styles.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onFilterValue}\r\n      />\r\n    </label>\r\n  </>\r\n);\r\nconst mapStateToProps = (state) => ({\r\n  value: contactSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilterValue: (e) =>\r\n    dispatch(contactActions.changeFilter(e.currentTarget.value)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from \"react\";\r\n\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\n\r\nimport \"./styles.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { contactReducer } from \"./contacts\";\r\n\r\nconst middleware = getDefaultMiddleware();\r\n//store\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n  },\r\n  middleware,\r\n\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default { store };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3FJjx\",\"label\":\"ContactForm_label__3EK0O\",\"input\":\"ContactForm_input__1ymOz\",\"btn\":\"ContactForm_btn__3y-dj\"};"],"sourceRoot":""}